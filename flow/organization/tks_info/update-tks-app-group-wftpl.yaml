apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: tks-update-appgroup
  namespace: argo
spec:
  entrypoint: updateTksAppGroup
  arguments:
    parameters:
    - name: tks_api_url
      value: "http://tks-api.tks.svc:9110"
    - name: app_group_id
      value: "abcdefghi"
  templates:
  - name: updateTksAppGroup
    inputs:
      parameters:
      - name: endpoint
      - name: app_type
    script:
      image: harbor.taco-cat.xyz/tks/centos-tks-api:v1.0
      command: ["python"]
      env:
      - name: PYTHONPATH
        value: "/opt/protobuf/:/opt/rh/rh-python38/root/lib/python3.8/site-packages/:/opt/app-root/lib/python3.8/site-packages/"
      envFrom:
      - secretRef:
          name: "tks-api-secret"
      source: |
        import sys
        import requests
        import os

        TKS_API_URL = "{{workflow.parameters.tks_api_url}}"
        APPGROUP_ID = "{{workflow.parameters.app_group_id}}"
        ENDPOINT = "{{inputs.parameters.endpoint}}"
        APPTYPE = "{{inputs.parameters.app_type}}"
         

        def getToken() :
            data = {
                'organizationId' : os.environ['ORGANIZATION_ID'],
                'accountId': os.environ['ACCOUNT_ID'],
                'password' : os.environ['PASSWORD']
            }

            res = requests.post(TKS_API_URL+"/api/1.0/auth/login", json = data )
            if res.status_code != 200 :
                return ''
            resJson = res.json()
            return resJson['user']['token']

        print( ENDPOINT )
        data = {
            'appGroupId' : APPGROUP_ID,
            'applicationType' : APPTYPE,
            'endpoint' : ENDPOINT
        }
        res = requests.post(TKS_API_URL + '/api/1.0/app-groups/' + APPGROUP_ID + '/applications' , headers={'Authorization': 'Bearer ' + getToken()}, json = data )
        print("Response code from UpdateApplication : %d" % res.status_code)



